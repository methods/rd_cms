table {
  font-family: "nta", Arial, sans-serif;
  font-weight: 400;
  text-transform: none;
  font-size: 14px;
  line-height: 1.14286;
  border-collapse: collapse;
  /* cropped tables */ }
  @media (min-width: 641px) {
    table {
      font-size: 16px;
      line-height: 1.25; } }
  table b {
    font-weight: bold; }
  table .indent {
    padding-left: 15px !important; }
  table.cropped {
    display: block;
    width: 100%; }
    table.cropped tr {
      width: 100%; }
    table.cropped thead {
      display: block; }
    table.cropped tbody {
      display: block;
      max-height: 410px;
      overflow-y: scroll; }
  table tr td {
    display: none;
    padding-left: 0; }
    @media (min-width: 480px) {
      table tr td {
        display: table-cell; } }
    table tr td:first-child, table tr td:last-child {
      display: table-cell; }
  table td {
    font-family: "ntatabularnumbers", "nta", Arial, sans-serif;
    font-weight: 400;
    text-transform: none;
    font-size: 14px;
    line-height: 1.14286;
    text-align: right;
    vertical-align: text-top;
    padding: 10px 0 10px 10px; }
    @media (min-width: 641px) {
      table td {
        font-size: 16px;
        line-height: 1.25; } }
    table td button {
      border: 0;
      padding: 0;
      background: transparent;
      color: #005ea5;
      font-size: 14px; }
      @media (min-width: 480px) {
        table td button {
          font-size: 16px; } }
      @media (min-width: 768px) {
        table td button {
          font-size: 18px; } }
      table td button:hover {
        cursor: pointer;
        text-decoration: underline; }
      table td button:active, table td button:focus {
        text-decoration: none; }
        table td button:active:hover, table td button:focus:hover {
          text-decoration: underline; }
    table td:first-of-type {
      font-family: "nta", Arial, sans-serif;
      font-weight: 400;
      text-transform: none;
      font-size: 14px;
      line-height: 1.14286;
      padding-left: 0px; }
      @media (min-width: 641px) {
        table td:first-of-type {
          font-size: 16px;
          line-height: 1.25; } }
    table td.first {
      border-left: 1px #bfc1c3 solid; }
    table td.last {
      padding-right: 10px; }
    table td:focus {
      outline-width: 0; }
    table td.sorting_asc, table td.sorting_desc {
      position: relative; }
      table td.sorting_asc button, table td.sorting_desc button {
        outline-width: 0;
        font-weight: bold; }
      table td.sorting_asc:after, table td.sorting_desc:after {
        position: absolute;
        right: -15px;
        top: 20px;
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-top: 8px solid #005ea5;
        content: ''; }
      table td.sorting_asc:first-child:after, table td.sorting_desc:first-child:after {
        position: relative;
        display: inline-block;
        top: 0;
        right: -5px;
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        content: ''; }
    table td.sorting_desc:after {
      border-top: 0px solid transparent;
      border-bottom: 8px solid #005ea5; }
  table .border-bottom {
    border-bottom: 1px solid #bfc1c3; }
  table thead tr {
    font-weight: normal; }
    table thead tr td:first-of-type {
      text-align: left; }
    table thead tr.top td {
      border-bottom: 0px transparent solid;
      font-weight: bold;
      text-align: left;
      padding-left: 10px; }
  table .right-border {
    border-right: 1px solid #bfc1c3;
    padding-right: 10px; }
  table tbody td {
    border-bottom: 1px solid #bfc1c3; }
  table .breakdown-controller {
    color: #005ea5; }
    table .breakdown-controller:hover {
      color: #2b8cc4;
      cursor: pointer; }
  table .not-bold {
    font-weight: 400 !important; }
  table .breakdown td {
    padding-left: 20px; }

.expand-triangle {
  display: inline-block;
  width: 0;
  height: 0;
  border-top: 4px solid transparent;
  border-bottom: 4px solid transparent;
  border-left: 8px solid #005ea5;
  transition-duration: .2s;
  margin-right: 10px;
  margin-left: -19px;
  margin-bottom: 2px; }

.rotate {
  transition-duration: .2s;
  transform: rotate(90deg); }

.rwd-table {
  min-width: 300px;
  table-layout: auto; }
  .rwd-table th {
    display: none;
    font-weight: bold; }
  .rwd-table td {
    display: block; }
    .rwd-table td:before {
      content: attr(data-th);
      font-weight: bold;
      padding-left: 0px;
      width: 50%;
      display: inline-block; }
      @media (min-width: 480px) {
        .rwd-table td:before {
          display: none; } }
  .rwd-table th, .rwd-table td {
    text-align: left;
    padding-left: 0px; }
    @media (min-width: 480px) {
      .rwd-table th, .rwd-table td {
        display: table-cell; }
        .rwd-table th:first-child, .rwd-table td:first-child {
          padding-left: 0; }
        .rwd-table th:last-child, .rwd-table td:last-child {
          padding-right: 0; } }

.ethnicity {
  font-size: 24px !important;
  padding-top: 20px; }

.rwd-table {
  overflow: hidden; }

.multiple-graphs {
  float: right; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

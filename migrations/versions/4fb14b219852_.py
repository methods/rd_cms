"""empty message

Revision ID: 4fb14b219852
Revises: dab42c0a0f0d
Create Date: 2017-06-29 20:05:56.456580

"""
import hashlib
import time
import sqlalchemy as sa
from alembic import op
from slugify import slugify
from sqlalchemy.exc import ProgrammingError
from sqlalchemy.orm import Session
from application.cms.models import DbPage, DbDimension



# revision identifiers, used by Alembic.
revision = '4fb14b219852'
down_revision = 'dab42c0a0f0d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    session = Session(bind=op.get_bind())

    for page in session.query(DbPage):
        dimensions = page.page_dict().get('dimensions', [])

        for dimension in dimensions:
            hash = hashlib.sha1()
            hash.update("{}".format(slugify(dimension['title'])).encode('utf-8'))
            guid = hash.hexdigest()

            if DbDimension.query.get(guid) is None:

                db_dimension = DbDimension(guid=guid,
                                           measure=page,
                                           title=dimension.get('title'),
                                           time_period=dimension.get('time_period'),
                                           summary=dimension.get('summary'),
                                           suppression_rules=dimension.get('suppression_rules'),
                                           disclosure_control=dimension.get('disclosure_control'),
                                           type_of_statistic=dimension.get('type_of_statistic'),
                                           location=dimension.get('location'),
                                           source=dimension.get('source'))

                db_dimension.chart = dimension.get('chart')
                db_dimension.chart_source_data = dimension.get('chart_source_data')
                db_dimension.table = dimension.get('table')
                db_dimension.table_source_data = dimension.get('table_source_data')

                page.dimensions.append(db_dimension)
                session.add(page)
                session.commit()


def downgrade():
    pass
